pipeline {
    agent any

    environment {
        DOCKER_REGISTRY = 'docker.io/anandswaroop' // Replace 'anandswaroop' with your Docker Hub username
        APP_NAME = 'simple-app'
        KUBE_CONFIG = credentials('kube-config') // Ensure this matches your credential ID
    }

    stages {
        stage('Checkout') {
            steps {
               git branch: 'main', url: 'https://github.com/0xabhi/kubernetes-jenkins.git'
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    // Build the Docker image
                    sh """
                        docker build -t ${DOCKER_REGISTRY}/${APP_NAME}:${env.BUILD_NUMBER} .
                    """
                }
            }
        }

        stage('Push Docker Image') {
            steps {
                script {
                    // Log in to Docker Hub
                    withCredentials([usernamePassword(credentialsId: 'docker-credentials', usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASSWORD')]) {
                        sh """
                            echo ${DOCKER_PASSWORD} | docker login -u ${DOCKER_USER} --password-stdin
                        """
                    }

                    // Push the Docker image
                    sh """
                        docker push ${DOCKER_REGISTRY}/${APP_NAME}:${env.BUILD_NUMBER}
                    """
                }
            }
        }

        stage('Deploy to AKS') {
            steps {
                script {
                    // Deploy to Kubernetes
                    withKubeConfig([credentialsId: 'kube-config']) {
                        sh """
                            kubectl apply -f deployment.yaml
                            kubectl apply -f service.yaml
                        """
                    }
                }
            }
        }
    }

    post {
        success {
            echo 'Deployment successful!'
        }
        failure {
            echo 'Deployment failed!'
        }
    }
}
